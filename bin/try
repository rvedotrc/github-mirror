#!/usr/bin/env ruby
# vi: set ts=2 sw=2 :

$: << "lib"

require 'github_mirror/cacheing_thing'
require 'github_mirror/github_paginating_enumerator'

require 'json'
config = JSON.parse(IO.read 'etc/github-mirror.json')
user = config['github']['user']
pass = config['github']['pass']

require 'github_api'
github_client = Github.new(
  basic_auth: user+':'+pass,
  auto_pagination: false,
)

@mutex = Mutex.new
@int_count = 0
Signal.trap('INT') do
  Thread.new { @mutex.synchronize { @int_count += 1 } }
  puts "Stopping..."
  Signal.trap('INT', 'DEFAULT')
end

GithubMirror::CacheingThing.new('var/repositories.json', Time.now - 86400) do
  github_client.repos.list.lazy_each
end.each do |repo|
  puts "#{repo['size']}\t#{repo['full_name']}"
  break if @mutex.synchronize { @int_count > 0 }
end

# eof try
